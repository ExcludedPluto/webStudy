가끔 thunk 함수 내에서 라우트를 사용해야 할 때가 있다.
	ex) 로그인 요청 후 성공 시 / 경로로 이동하고, 실패시 경로 유지


withRouter로 처리할 수 있지만, thunk로 처리하는 법도 알아보자



1. customHistory 만들어서 적용하기

	thunk에서 라우터의 history 객체를 사용하려면 BrowserHistory 인스턴스를 직접 만들어서 사용해야함

	// index.js
	
	import { Router } from 'react-router-dom';
	import { createBrowserHistory } from 'history';

	const customHistory = createBrowserHistory();
	
	const store = createStore(
	  rootReducer,
	  // logger 를 사용하는 경우, logger가 가장 마지막에 와야합니다.
	  composeWithDevTools(
	    applyMiddleware(
	      ReduxThunk.withExtraArgument({ history: customHistory }),		// 이러면 customeHistory 객체가 자동으로 history로
	      logger								// thunk 함수에 들어간다.
	    )
	  )
	);

	ReactDOM.render(
	  <Router history={customHistory}>
	    <Provider store={store}>
	      <App />
	    </Provider>
	  </Router>,
	  document.getElementById('root')
	);



2. 홈 이동 thunk 만들기

	// modules/posts.js

	export const goToHome = () => (dispatch, getState, { history }) => {
  		history.push('/');
	};

